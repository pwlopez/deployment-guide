
###############################################################################
# This base workflow can be used in any repository that builds and pushes
# a docker image to AWS ECR. Additional steps can be added that test the code
# contained within the image before building the image to ensure code works. 

# Add secrets to Github Actions
###############################################################################

name: build-push-aws
on:
  push:
    branches:
      - main
jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to AWS ECR
        id: build-tag-push
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: repo-name
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "ECR_REGISTRY=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV


      - name: Deploy to Sagemaker Endpoint
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install -upgrade pip
          pip install -r requirements.txt

      - name: Deploy to Sagemaker Endpoint
        env:
          AWS-ACCESS-KEY: ${{ secrets.AWS_ACCESS_KEY_ID  }}
          AWS-SECRET-KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          MODEL-NAME: "name_of_model"
          MODEL-PATH: "s3://PATH/TO/MODEL/name_of_model.tar.gz"
        run: |
          python /app/deploy.py